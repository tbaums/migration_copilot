{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1",
      "unitTestNullDataMigrated" : true
    },
    "functions" : { },
    "codeGenConfiguration" : {
      "editableConfig" : false,
      "plibVersion" : {
        "mavenVersion" : "8.7.0",
        "pyPiVersion" : "1.9.29"
      }
    },
    "id" : "demo",
    "uri" : "pipelines/real_graph_repair",
    "sourceSuggestions" : [ ],
    "pipelineSettingsInfo" : {
      "isNullValuesInUnitTestsEnabled" : true
    },
    "language" : "python",
    "fabricId" : "19010",
    "frontEndLanguage" : "python",
    "mode" : "batch",
    "udfs" : {
      "language" : "python",
      "udfs" : [ ],
      "functionPackageName" : "michaelprophecyioteam.migrationcopilot.functions",
      "sharedFunctionPackageNames" : [ "prophecy.spark_basic.functions", "prophecy.warehouse.functions" ],
      "initialCode" : "from prophecy.utils import ABIUtil, BigDecimal, getContentAsStream, substring_scala\n\n\n",
      "isAbInitioTranspilerImport" : true
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "ORDER_FILE",
          "kind" : {
            "type" : "string",
            "value" : "/adshome/apatn19/orders.csv"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "OP_AGG_RPT_FILE",
          "kind" : {
            "type" : "string",
            "value" : "/tmp/cust_agg_rpt.csv"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "CUSTOMER_FILE",
          "kind" : {
            "type" : "string",
            "value" : "/adshome/apatn19/data.csv"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "python",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "12654",
      "projectName" : "ProphecySparkBasicsPython",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "12655",
      "projectName" : "ProphecyWarehousePython",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "real_graph_repaired",
    "configurationVersion" : "v2"
  },
  "connections" : [ {
    "id" : "e1",
    "source" : "ByAmounts",
    "sourcePort" : "ByAmounts__out",
    "target" : "Report",
    "targetPort" : "Report__inDF"
  }, {
    "id" : "e5",
    "source" : "SortCustomers",
    "sourcePort" : "SortCustomers__out",
    "target" : "ByCustomerId",
    "targetPort" : "ByCustomerId__left"
  }, {
    "id" : "e4",
    "source" : "SortOrders",
    "sourcePort" : "SortOrders__out",
    "target" : "ByCustomerId",
    "targetPort" : "ByCustomerId__right"
  }, {
    "id" : "e3",
    "source" : "ByCustomerId",
    "sourcePort" : "ByCustomerId__out",
    "target" : "SumAmounts",
    "targetPort" : "SumAmounts__inDF"
  }, {
    "id" : "0NExbLqeSOy5jWM5rGETA$$R--KdYN9_wrDH0qLiMgMR",
    "source" : "Customers",
    "sourcePort" : "Customers__out",
    "target" : "SortCustomers",
    "targetPort" : "SortCustomers__inDF"
  }, {
    "id" : "Cm-0YQplIl0b7tZsA37jx$$e2LejgPJRxCwu8ZGAlIjJ",
    "source" : "Orders",
    "sourcePort" : "Orders__out",
    "target" : "SortOrders",
    "targetPort" : "SortOrders__inDF"
  }, {
    "id" : "oA9f_0sYIHMFZy1hbOPU6",
    "source" : "SumAmounts",
    "sourcePort" : "SumAmounts__out",
    "target" : "ByAmounts",
    "targetPort" : "ByAmounts__inDF"
  } ],
  "processes" : {
    "Cleanup" : {
      "id" : "Cleanup",
      "component" : "Todo",
      "metadata" : {
        "label" : "Cleanup",
        "slug" : "Cleanup",
        "x" : 820,
        "y" : 120,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "Cleanup__inDF",
          "slug" : "inDF"
        } ],
        "outputs" : [ {
          "id" : "Cleanup__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : true,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "error" : "Parse error: 'CustomParserError(2:1,'BEGIN()' expected but IDENTIFIER(beginning) found)'",
        "code" : "out :: reformat(in) =\nbeginning\n  out.* :: in.*;\n  out.full_name :: in.first_name +\" \" + in.last_name;\nend;",
        "numOutports" : 1
      }
    },
    "ByAmounts" : {
      "id" : "ByAmounts",
      "component" : "OrderBy",
      "metadata" : {
        "label" : "ByAmounts",
        "slug" : "ByAmounts",
        "x" : 980,
        "y" : 280,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "ByAmounts__inDF",
          "slug" : "inDF",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "amount",
              "type" : "double",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "ByAmounts__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ "ByAmounts__inDF##amount" ],
        "orders" : [ {
          "expression" : {
            "format" : "python",
            "expression" : "col(\"amount\")"
          },
          "sortType" : "desc"
        } ]
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12654.git&subPath=&tag=0.2.39&projectSubscriptionProjectId=12654&path=gems/OrderBy",
        "projectName" : "ProphecySparkBasicsPython"
      }
    },
    "ByCustomerId" : {
      "id" : "ByCustomerId",
      "component" : "Join",
      "metadata" : {
        "label" : "ByCustomerId",
        "slug" : "ByCustomerId",
        "x" : 440,
        "y" : 280,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "ByCustomerId__left",
          "slug" : "left",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The first name of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The last name of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Contact phone number of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Email address of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Code representing the customer's country",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Date when the customer account was opened",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Flags indicating the status or characteristics of the customer's account",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        }, {
          "id" : "ByCustomerId__right",
          "slug" : "right",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "order_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for the customer placing the order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_status",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Current status of the order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_category",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Category of the order placed by the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Date when the order was placed",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "amount",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Total monetary value of the order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "ByCustomerId__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "right",
          "expression" : {
            "format" : "python",
            "expression" : "(col(\"left.customer_id\") == col(\"right.customer_id\"))"
          },
          "joinType" : "inner"
        } ],
        "expressions" : [ {
          "target" : "first_name",
          "expression" : {
            "format" : "python",
            "expression" : "col(\"left.first_name\")"
          },
          "description" : "",
          "_row_id" : "1727818809"
        }, {
          "target" : "last_name",
          "expression" : {
            "format" : "python",
            "expression" : "col(\"left.last_name\")"
          },
          "description" : "",
          "_row_id" : "327471818"
        }, {
          "target" : "customer_id",
          "expression" : {
            "format" : "python",
            "expression" : "col(\"left.customer_id\")"
          },
          "description" : "",
          "_row_id" : "1781655846"
        }, {
          "target" : "amount",
          "expression" : {
            "format" : "python",
            "expression" : "col(\"right.amount\")"
          },
          "description" : "",
          "_row_id" : "61910247"
        } ],
        "hints" : [ {
          "id" : "ByCustomerId__left",
          "alias" : "left",
          "hintType" : "none",
          "propagateColumns" : false
        }, {
          "id" : "ByCustomerId__right",
          "alias" : "right",
          "hintType" : "none",
          "propagateColumns" : false
        } ],
        "allIn1" : null,
        "activeTab" : "conditions",
        "columnsSelector" : [ "ByCustomerId__left##customer_id", "ByCustomerId__right##customer_id", "ByCustomerId__left##last_name", "ByCustomerId__left##customer_id", "ByCustomerId__right##amount", "ByCustomerId__left##first_name" ],
        "allIn0" : null,
        "whereClause" : null,
        "headAlias" : "left"
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12654.git&subPath=&tag=0.2.39&projectSubscriptionProjectId=12654&path=gems/Join",
        "projectName" : "ProphecySparkBasicsPython"
      }
    },
    "SortCustomers" : {
      "id" : "SortCustomers",
      "component" : "OrderBy",
      "metadata" : {
        "label" : "SortCustomers",
        "slug" : "SortCustomers",
        "x" : 240,
        "y" : 180,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "SortCustomers__inDF",
          "slug" : "inDF",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The first name of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The last name of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Contact phone number of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Email address of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Code representing the customer's country",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Date when the customer account was opened",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Flags indicating the status or characteristics of the customer's account",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "SortCustomers__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ "SortCustomers__inDF##customer_id" ],
        "orders" : [ {
          "expression" : {
            "format" : "python",
            "expression" : "col(\"customer_id\")"
          },
          "sortType" : "asc"
        } ]
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12654.git&subPath=&tag=0.2.39&projectSubscriptionProjectId=12654&path=gems/OrderBy",
        "projectName" : "ProphecySparkBasicsPython"
      }
    },
    "SortOrders" : {
      "id" : "SortOrders",
      "component" : "OrderBy",
      "metadata" : {
        "label" : "SortOrders",
        "slug" : "SortOrders",
        "x" : 240,
        "y" : 380,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "SortOrders__inDF",
          "slug" : "inDF",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "order_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for the customer placing the order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_status",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Current status of the order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_category",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Category of the order placed by the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Date when the order was placed",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "amount",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Total monetary value of the order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "SortOrders__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ "SortOrders__inDF##customer_id" ],
        "orders" : [ {
          "expression" : {
            "format" : "python",
            "expression" : "col(\"customer_id\")"
          },
          "sortType" : "asc"
        } ]
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12654.git&subPath=&tag=0.2.39&projectSubscriptionProjectId=12654&path=gems/OrderBy",
        "projectName" : "ProphecySparkBasicsPython"
      }
    },
    "SumAmounts" : {
      "id" : "SumAmounts",
      "component" : "Aggregate",
      "metadata" : {
        "label" : "SumAmounts",
        "slug" : "SumAmounts",
        "x" : 660,
        "y" : 280,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "SumAmounts__inDF",
          "slug" : "inDF",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The first name of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "The last name of the customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "amount",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Total monetary value of the order",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "SumAmounts__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "allIns" : false,
        "doPivot" : false,
        "aggregate" : [ {
          "target" : "first_name",
          "expression" : {
            "format" : "python",
            "expression" : "first(col(\"first_name\"))"
          },
          "description" : "",
          "_row_id" : "1156524729"
        }, {
          "target" : "last_name",
          "expression" : {
            "format" : "python",
            "expression" : "first(col(\"last_name\"))"
          },
          "description" : "",
          "_row_id" : "1249848695"
        }, {
          "target" : "amount",
          "expression" : {
            "format" : "python",
            "expression" : "sum(col(\"amount\"))"
          },
          "description" : "",
          "_row_id" : "2139190069"
        } ],
        "allowSelection" : true,
        "pivotColumn" : null,
        "pivotValues" : [ ],
        "activeTab" : "aggregate",
        "columnsSelector" : [ "SumAmounts__inDF##customer_id", "SumAmounts__inDF##last_name", "SumAmounts__inDF##amount", "SumAmounts__inDF##first_name" ],
        "groupBy" : [ {
          "target" : "customer_id",
          "expression" : {
            "format" : "python",
            "expression" : "col(\"customer_id\")"
          },
          "description" : "",
          "_row_id" : "656773642"
        } ]
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12654.git&subPath=&tag=0.2.39&projectSubscriptionProjectId=12654&path=gems/Aggregate",
        "projectName" : "ProphecySparkBasicsPython"
      }
    },
    "Customers" : {
      "id" : "Customers",
      "component" : "Source",
      "metadata" : {
        "label" : "Customers",
        "slug" : "Customers",
        "x" : 60,
        "y" : 160,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Loads customer data from a CSV file, providing essential information for customer management and analysis.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "Customers__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/Customers"
      }
    },
    "Report" : {
      "id" : "Report",
      "component" : "Target",
      "metadata" : {
        "label" : "Report",
        "slug" : "Report",
        "x" : 1220,
        "y" : 280,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Generates a CSV report from the provided data, facilitating easy sharing and analysis of key information.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ {
          "id" : "Report__inDF",
          "slug" : "inDF",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "Unique identifier for each customer",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "amount",
              "type" : "double",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/Report"
      }
    },
    "Orders" : {
      "id" : "Orders",
      "component" : "Source",
      "metadata" : {
        "label" : "Orders",
        "slug" : "Orders",
        "x" : 40,
        "y" : 380,
        "phase" : 3,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Loads order data from a CSV file, enabling analysis of customer orders and their statuses.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "Orders__out",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/Orders"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  },
  "diagnostics" : [ {
    "property" : "$.workflow.processes.Cleanup",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Could not find the spec for Todo",
    "tags" : [ ],
    "relatedInformation" : [ ]
  } ]
}